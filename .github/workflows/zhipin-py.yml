name: zhipin-py

on:
  workflow_dispatch:

jobs:
  build:
    env:
      PY_COLORS: "1"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          lfs: true
      - run: |
          sudo apt-get update
          sudo apt-get install -y fonts-wqy-zenhei
          sudo apt-get install -y language-pack-zh-hans
          sudo locale-gen zh_CN.UTF-8
          sudo update-locale LANG=zh_CN.UTF-8
          curl -fsSL https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --yes --dearmor --output /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list
          sudo apt-get update && sudo apt-get install cloudflare-warp
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          curl https://raw.githubusercontent.com/seleniumbase/SeleniumBase/master/requirements.txt --output requirementsSeleniumBase.txt
          pip install -r requirementsSeleniumBase.txt
          pip install -r BossRS-helper/requirements.txt
      - name: Install Chrome
        run: |
          sudo apt install google-chrome-stable
      - name: Check the console scripts interface
        run: |
          seleniumbase
          sbase
      - name: Install chromedriver
        run: |
          seleniumbase install chromedriver
      - name: Make sure pytest is working
        run: |
          echo "def test_1(): pass" > nothing.py
          pytest nothing.py
      - name: Make sure nosetests is working
        run: |
          echo "def test_2(): pass" > nothing2.py
          nosetests nothing2.py
      - name: Run pytest BossRS-helper/zhipin-py.py
        env:
          STATE: ${{ vars.STATE }}
          CONFIG_PATH: ${{ vars.CONFIG_PATH }}
          PROXY_STR: socks5://127.0.0.1:40000
        run: |
          cd BossRS-helper
          warp-cli --accept-tos register
          warp-cli --accept-tos set-mode proxy
          warp-cli --accept-tos connect
          warp-cli --accept-tos enable-always-on
          export ALL_PROXY=socks5://127.0.0.1:40000
          pytest zhipin-py.py --uc --browser=chrome --headless --proxy="$PROXY_STR" -v -s --junit-xml=junit/test-results.xml
      - uses: actions/upload-artifact@v4.3.1
        if: always()
        with:
          path: |
            ./*.txt
            ./*.xml
            BossRS-helper/*.db
            BossRS-helper/*.txt
            BossRS-helper/*.json
            BossRS-helper/*.xml
            BossRS-helper/junit/*
            BossRS-helper/latest_logs/*/*
